#include <vector>
#include <cmath>

class Solution {
public:
    int minSpeedOnTime(std::vector<int>& dist, double hour) {
        int n = dist.size();
        int left = 1, right = 1e7 + 1; // Set the upper bound based on the constraints

        while (left < right) {
            int mid = left + (right - left) / 2;
            double timeTaken = 0;

            for (int i = 0; i < n - 1; i++) {
                timeTaken += std::ceil(dist[i] * 1.0 / mid);
            }

            timeTaken += dist[n - 1] * 1.0 / mid;

            if (timeTaken <= hour) {
                right = mid;
            } else {
                left = mid + 1;
            }
        }

        return left == 1e7 + 1 ? -1 : left;
    }
};
